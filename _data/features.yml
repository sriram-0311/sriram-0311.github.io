
- title: "Real-Time Multi-Camera Visual-Inertial SLAM with Factor Graph Optimization"
  excerpt: "Engineered a production-ready, real-time multi-camera visual-inertial SLAM system in C++ with GTSAM backend optimization, developed in collaboration with Toyota Research Institute. Implemented robust multi-sensor fusion architecture integrating stereo/multi-camera arrays, IMU, and GPS for autonomous navigation in challenging environments. Key innovations include: <b>Factor Graph Optimization</b> with Schur complement-based elimination for computational efficiency, <b>Visual Place Recognition</b> with DBoW2-based loop closure detection, <b>Adaptive Relocalization</b> system with coarse-to-fine pose estimation, and <b>Real-time Performance</b> optimized for large-scale deployment. System demonstrates state-of-the-art accuracy on standard benchmarks while maintaining sub-10ms processing latency. Features comprehensive ROS integration, extensive unit testing, and modular architecture supporting various camera configurations. Successfully deployed for autonomous vehicle navigation, demonstrating robust performance across diverse lighting conditions, dynamic environments, and GPS-denied scenarios."
  image_path: "images/software/SLAM.gif"
  url: "https://github.com/sriram-0311/MC-SLAM"

- title: "End-to-End DETR-Based Video Panoptic Segmentation for Autonomous Navigation"
  excerpt: "Developed a production-scale deep learning system for real-time scene understanding in autonomous vehicles using transformer-based DETR architecture. Implemented end-to-end training pipeline for multi-camera panoramic video panoptic segmentation, achieving temporally consistent instance tracking across 5-camera arrays. Key technical contributions include: <b>Custom DETR Architecture</b> adaptation for video sequences with temporal consistency constraints, <b>Multi-Camera Fusion</b> for 360-degree environmental perception, <b>Instance Tracking</b> maintaining object identity across time and camera views, and <b>Real-time Inference</b> optimized for autonomous driving applications. System trained on Cityscapes dataset with custom data augmentation and loss functions for robust 'stuff' vs 'things' classification. Achieved state-of-the-art Panoptic Quality metrics while maintaining real-time performance. Features modular PyTorch implementation with comprehensive evaluation metrics and deployment-ready inference pipeline. Successfully demonstrates advanced computer vision expertise in transformer architectures, multi-modal sensor fusion, and production ML systems for safety-critical autonomous navigation."
  image_path: "images/software/Panoptic.gif"
  url: "https://github.com/sriram-0311/DETR-PS"

- title: "Removing Motion Blur"
  excerpt: "Deblurring images is challenging due to the ill-posed nature of the problem. Traditional methods rely on informative priors, but this paper suggests learning them from the data. By focusing on motion flow maps, a Fully Convolutional Neural Network can effectively recover images. Synthetic data with simulated flows aids in calculating blur kernels for non-blind deconvolution, enhancing image recovery."
  image_path: "images/software/MotionBlur.png"
  url: "https://github.com/sriram-0311/motion-blur.git"

- title: "Image Mosaicing and Warping"
  excerpt: "This project aims to stitch multiple images together to form a panorama. The process involves feature detection, feature matching, and image warping. The feature detection algorithm used is the Harris Corner Detector. The feature matching algorithm used is the brute force matcher. The image warping algorithm used is the inverse distance weighted interpolation."
  image_path: "images/software/ImageWarp.gif"
  url: "https://github.com/sriram-0311/cv_mosaicing"

- title: "Motion Detection"
  excerpt: "In Computer Vision it is often helpful to discard unnecessary parts of images to focus only on essential sections. In the case of doing an analysis of dynamic objects in a static environment, removing the static background and detecting the moving objects can provide an excellent first step. In this project multiple spatial and temporal filtering techniques are implemented in C++ to detect motion in image sequences with static backgrounds. In particular, absolute difference and Prewitt temporal masking are implemente and compared to a derivative of a gaussian filter."
  image_path: "images/software/MotionDetection.gif"
  url: "https://github.com/sriram-0311/cv_motion_detection.git"

- title: "Camera-Guided Autonomous Search and Rescue with Modified ROS Exploration"
  excerpt: "Engineered an innovative autonomous search and rescue system using TurtleBot3 that achieved <b>86% victim detection rate (19/22 April tags)</b> by fundamentally reimagining exploration algorithms. Addressed critical limitation in standard ROS frontier exploration where <b>LiDAR-based exploration</b> missed victims outside camera field-of-view. Developed novel <b>Camera-Aware Exploration Strategy</b> by modifying gmapping and explore_lite packages to incorporate camera constraints into exploration planning. Key innovation: created <b>Binary Camera Mask Integration</b> that overlays camera field-of-view onto exploration maps, ensuring the robot prioritizes areas visible to its camera sensor. Technical implementation included <b>Custom ROS Package Modification</b> of core exploration algorithms, <b>Multi-Sensor Fusion</b> combining 2D LiDAR mapping with pinhole camera detection, and <b>Real-time Path Planning</b> optimized for victim discovery rather than pure exploration efficiency. System demonstrates superior performance compared to standard frontier exploration, crucial for time-critical rescue operations where comprehensive area coverage with visual confirmation is essential for mission success."
  image_path: "images/software/MRProject.gif"
  url: "https://github.com/sriram-0311/Search-and-Rescue-with-Turtlebot.git"

- title: "Mobile Robotics Algorithms"
  excerpt: "Implementing some of the algorithms from the Mobile Robotics Course. These include A* Path Planning, Particle Filter, and Iterative Closest Point."
  image_path: "images/software/MobileRobotics.gif"
  url: "https://github.com/sriram-0311/MobileRobotics5550.git"

